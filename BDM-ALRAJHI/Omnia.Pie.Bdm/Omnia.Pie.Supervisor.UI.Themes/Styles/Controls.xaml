<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Resources/Main.xaml"/>
		<ResourceDictionary Source="ColorScheme.xaml"/>
	</ResourceDictionary.MergedDictionaries>

    <system:Double x:Key="titleFont">22</system:Double>
	<system:Double x:Key="bigFont">18</system:Double>
	<system:Double x:Key="normalFont">14</system:Double>
	<system:Double x:Key="smallFont">10</system:Double>

	<CornerRadius x:Key="corner" TopLeft="3" TopRight="3" BottomLeft="3" BottomRight="3"/>
	<CornerRadius x:Key="corner.right" TopLeft="3" TopRight="0" BottomLeft="3" BottomRight="0"/>

	<Thickness x:Key="margin">5</Thickness>
	<Thickness x:Key="margin.left">0,2,2,2</Thickness>
	<Thickness x:Key="margin.right">2,2,0,2</Thickness>
	<Thickness x:Key="margin.list">10 3 10 3</Thickness>
	<Thickness x:Key="padding">6</Thickness>

	<Style TargetType="DockPanel">
		<Setter Property="Background" Value="{StaticResource backgroundBrush}"/>
	</Style>

	<Style TargetType="{x:Type ContextMenu}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<Border Background="#FF2453A2" CornerRadius="5" BorderBrush="#FFF19C00" BorderThickness="2" Opacity="0.96">
						<StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="5,4,5,4"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type Thumb}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Grid x:Name="Grid">
						<Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
						<Border x:Name="CornerScrollBarRectangle" CornerRadius="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="10" Height="Auto" Margin="0,1,0,1" Background="OrangeRed" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Tag" Value="Horizontal">
							<Setter TargetName="CornerScrollBarRectangle" Property="Width" Value="Auto" />
							<Setter TargetName="CornerScrollBarRectangle" Property="Height" Value="6" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ScrollBar}">
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="Foreground" Value="#ADABAB" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Width" Value="10" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid x:Name="GridRoot" Width="10" Background="{TemplateBinding Background}">
						<Grid.RowDefinitions>
							<RowDefinition Height="0.00001*" />
						</Grid.RowDefinitions>
						<Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
							<Track.Thumb>
								<Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" />
							</Track.Thumb>
							<Track.IncreaseRepeatButton>
								<RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
							</Track.IncreaseRepeatButton>
							<Track.DecreaseRepeatButton>
								<RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
							</Track.DecreaseRepeatButton>
						</Track>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
							<Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
						</Trigger>
						<Trigger SourceName="Thumb" Property="IsDragging" Value="true">
							<Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
						</Trigger>

						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="Orientation" Value="Horizontal">
							<Setter TargetName="GridRoot" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="PART_Track" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
							<Setter Property="Width" Value="Auto" />
							<Setter Property="Height" Value="8" />
							<Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
							<Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
							<Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="listViewScrollBarStyle" TargetType="{x:Type ScrollBar}">
		<Setter Property="Margin" Value="6 0 0 0"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Width" Value="25"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid x:Name="Bg" SnapsToDevicePixels="True">
						<Grid.RowDefinitions>
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
							<RowDefinition Height="1E-05*"/>
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
						</Grid.RowDefinitions>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
						<RepeatButton x:Name="PART_LineUpButton" Visibility="Hidden" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}">
							<RepeatButton.Style>
								<Style TargetType="{x:Type RepeatButton}">
									<Setter Property="FocusVisualStyle">
										<Setter.Value>
											<Style>
												<Setter Property="Control.Template">
													<Setter.Value>
														<ControlTemplate>
															<Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Setter.Value>
									</Setter>
									<Setter Property="BorderThickness" Value="1"/>
									<Setter Property="HorizontalContentAlignment" Value="Center"/>
									<Setter Property="VerticalContentAlignment" Value="Center"/>
									<Setter Property="Padding" Value="1"/>
									<Setter Property="Focusable" Value="False"/>
									<Setter Property="IsTabStop" Value="False"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type RepeatButton}">
												<Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
													<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
												</Border>
												<ControlTemplate.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
														<Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
													</Trigger>
													<Trigger Property="IsPressed" Value="True">
														<Setter Property="Background" TargetName="border" Value="#FF606060"/>
														<Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
													</Trigger>
													<Trigger Property="IsEnabled" Value="False">
														<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
														<Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
														<Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</RepeatButton.Style>
							<Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
						</RepeatButton>
						<Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="ScrollBar.PageUpCommand">
									<RepeatButton.Style>
										<Style TargetType="{x:Type RepeatButton}">
											<Setter Property="IsHitTestVisible" Value="False"/>
											<Setter Property="OverridesDefaultStyle" Value="True"/>
											<Setter Property="Background" Value="Transparent"/>
											<Setter Property="Focusable" Value="False"/>
											<Setter Property="IsTabStop" Value="False"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type RepeatButton}">
														<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</RepeatButton.Style>
								</RepeatButton>
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="ScrollBar.PageDownCommand">
									<RepeatButton.Style>
										<Style TargetType="{x:Type RepeatButton}">
											<Setter Property="IsHitTestVisible" Value="False"/>
											<Setter Property="OverridesDefaultStyle" Value="True"/>
											<Setter Property="Background" Value="Transparent"/>
											<Setter Property="Focusable" Value="False"/>
											<Setter Property="IsTabStop" Value="False"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type RepeatButton}">
														<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</RepeatButton.Style>
								</RepeatButton>
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb>
									<Thumb.Style>
										<Style TargetType="{x:Type Thumb}">
											<Setter Property="OverridesDefaultStyle" Value="True"/>
											<Setter Property="IsTabStop" Value="False"/>
											<Setter Property="HorizontalAlignment" Value="Stretch"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type Thumb}">
														<Border x:Name="border" CornerRadius="5" Background="#FFA6A6A6" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
														<!--<Rectangle x:Name="rectangle" Fill="#FF999999" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>-->
														<ControlTemplate.Triggers>
															<Trigger Property="IsMouseOver" Value="True">
																<Setter Property="Background" TargetName="border" Value="#FFA6A6A6"/>
																<!--<Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>-->
															</Trigger>
															<Trigger Property="IsDragging" Value="True">
																<Setter Property="Background" TargetName="border" Value="#FFD1D1D1"/>
																<!--<Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>-->
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</Thumb.Style>
								</Thumb>
							</Track.Thumb>
						</Track>
						<RepeatButton x:Name="PART_LineDownButton" Visibility="Hidden" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
							<RepeatButton.Style>
								<Style TargetType="{x:Type RepeatButton}">
									<Setter Property="FocusVisualStyle">
										<Setter.Value>
											<Style>
												<Setter Property="Control.Template">
													<Setter.Value>
														<ControlTemplate>
															<Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Setter.Value>
									</Setter>
									<Setter Property="BorderThickness" Value="1"/>
									<Setter Property="HorizontalContentAlignment" Value="Center"/>
									<Setter Property="VerticalContentAlignment" Value="Center"/>
									<Setter Property="Padding" Value="1"/>
									<Setter Property="Focusable" Value="False"/>
									<Setter Property="IsTabStop" Value="False"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type RepeatButton}">
												<Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
													<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
												</Border>
												<ControlTemplate.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
														<Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
													</Trigger>
													<Trigger Property="IsPressed" Value="True">
														<Setter Property="Background" TargetName="border" Value="#FF606060"/>
														<Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
													</Trigger>
													<Trigger Property="IsEnabled" Value="False">
														<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
														<Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
														<Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</RepeatButton.Style>
							<Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
						</RepeatButton>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
						</MultiDataTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
							<Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ListView">
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Padding" Value="0"/>
			</Style>
		</Style.Resources>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="False" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<ControlTemplate.Resources>
						<!--<Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource listViewScrollBarStyle}" />-->
					</ControlTemplate.Resources>
					<ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}">
						<Border BorderBrush="Transparent" BorderThickness="0" Background="Transparent" Padding="0" SnapsToDevicePixels="True">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
					</ScrollViewer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ListView" x:Key="gridListView">
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Padding" Value="0"/>
			</Style>
		</Style.Resources>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="0"/>
	</Style>
	<Style TargetType="ListViewItem" x:Key="listViewItem">
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="CornerRadius" Value="{StaticResource corner}"/>
			</Style>
		</Style.Resources>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Border Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<ContentPresenter/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{StaticResource selected}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ListViewItem" x:Key="listViewItem.left" BasedOn="{StaticResource listViewItem}">
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="CornerRadius" Value="{StaticResource corner.right}"/>
				<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
			</Style>
		</Style.Resources>
	</Style>

	<Style TargetType="ListViewItem" x:Key="listViewItem.list" BasedOn="{StaticResource listViewItem}">
		<Setter Property="StackPanel.VerticalAlignment" Value="Center"/>
		<Setter Property="Grid.VerticalAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" CornerRadius="{StaticResource corner}">
						<ContentPresenter/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{StaticResource off}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Border">
		<Setter Property="CornerRadius" Value="{StaticResource corner}"/>
	</Style>
	<Style TargetType="Border" x:Key="border">
		<Setter Property="CornerRadius" Value="{StaticResource corner}"/>
	</Style>
	<Style TargetType="PasswordBox">
		<Setter Property="FontSize" Value="{StaticResource bigFont}"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="BorderBrush" Value="{StaticResource enter}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Padding" Value="10"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">
					<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="{StaticResource corner}">
						<ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="border" Value="0.56"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="Label">
		<Setter Property="FontSize" Value="{StaticResource normalFont}"/>
		<Setter Property="Foreground" Value="{StaticResource foreground}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
	</Style>
	<Style TargetType="Label" x:Key="label">
		<Setter Property="FontSize" Value="{StaticResource normalFont}"/>
		<Setter Property="Foreground" Value="{StaticResource foreground}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
	</Style>
	<Style TargetType="Label" x:Key="darkLabel">
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Background" Value="#FFCED677"/>
		<Setter Property="Padding" Value="{StaticResource padding}"/>
		<Setter Property="FontSize" Value="{StaticResource normalFont}"/>
		<Setter Property="Foreground" Value="{StaticResource foreground.dark}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
	</Style>
	<Style TargetType="TextBlock" x:Key="darkLabel.textBlock">
		<Setter Property="Background" Value="#FFCED677"/>
		<Setter Property="Padding" Value="{StaticResource padding}"/>
		<Setter Property="FontSize" Value="{StaticResource bigFont}"/>
		<Setter Property="Foreground" Value="{StaticResource foreground.dark}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
		<Style.Triggers>
			<Trigger Property="Text" Value="{x:Null}">
				<Setter Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="Text" Value="0">
				<Setter Property="Foreground" Value="{StaticResource off}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="Label" x:Key="header">
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Padding" Value="{StaticResource padding}"/>
		<Setter Property="Background" Value="{StaticResource backgroundBrush}"/>
		<Setter Property="FontSize" Value="{StaticResource normalFont}"/>
		<Setter Property="Padding" Value="4,8,4,8"/>
		<Setter Property="Foreground" Value="{StaticResource foreground}"/>
		<Setter Property="Margin" Value="{StaticResource margin}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
	</Style>
	<Style TargetType="ButtonBase" x:Key="button">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{DynamicResource foreground.dark}"/>
		<Setter Property="MinWidth"  Value="80"/>
		<Setter Property="MinHeight" Value="35"/>
		<Setter Property="FontSize" Value="{StaticResource normalFont}"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect ShadowDepth="4" BlurRadius="5"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ButtonBase">
					<Border x:Name="border" CornerRadius="6" RenderTransformOrigin="0.5 0.5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="True">
							<Setter TargetName="border" Property="Background" Value="{StaticResource button.enabled}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Background" Value="{StaticResource button.disabled}"/>
						</Trigger>
						<Trigger Property="ToggleButton.IsChecked" Value="True">
							<Setter TargetName="border" Property="Background" Value="{StaticResource on}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="border" Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.9" ScaleY="0.9" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="Button" BasedOn="{StaticResource button}"/>
	<Style TargetType="ToggleButton" x:Key="toggleButton" BasedOn="{StaticResource button}"/>
	<Style TargetType="ToggleButton" x:Key="supervisorMode">
		<Setter Property="Background" Value="{StaticResource off}"/>
		<Setter Property="Foreground" Value="{StaticResource foreground}"/>
		<Setter Property="MinWidth"  Value="160"/>
		<Setter Property="MinHeight" Value="40"/>
		<Setter Property="FontSize" Value="{StaticResource normalFont}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ButtonBase">
					<Border x:Name="border">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Background" Value="{StaticResource button.hover}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="True">
							<Setter TargetName="border" Property="Background" Value="{StaticResource button.enabled}"/>
							<Setter Property="Foreground" Value="{StaticResource foreground.dark}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Background" Value="Transparent"/>
						</Trigger>
						<Trigger Property="ToggleButton.IsChecked" Value="True">
							<Setter TargetName="border" Property="Background" Value="{StaticResource alarm}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DeviceStatusProgressBar" TargetType="{x:Type ProgressBar}">
		<Setter Property="Margin" Value="20,10,20,10"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="Gray"/>
		<Setter Property="Background" Value="Gray"/>
		<Setter Property="Foreground" Value="Gold"/>
		<Setter Property="Orientation" Value="Vertical"/>
		<Setter Property="Width" Value="30"/>
		<Setter Property="Height" Value="100"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ProgressBar}">
					<Grid x:Name="TemplateRoot">
						<Border Margin="5,0,5,0"  BorderThickness="0,1.2,0,1.2"  BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True"    Background="{TemplateBinding Background}"/>
						<Rectangle  x:Name="PART_Track"/>
						<Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
							<Grid x:Name="Indicator">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
								</Grid.ColumnDefinitions>
								<Rectangle Margin="0,0,-3,0" Grid.Column="1" Fill="{TemplateBinding Foreground}" />
								<Ellipse Height="{Binding Path=Width,RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="2" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}" Width="8" Fill="{TemplateBinding Foreground}"/>
								<Ellipse Height="{Binding Path=Width,RelativeSource={RelativeSource TemplatedParent}}"  StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}" Width="10" Fill="{TemplateBinding Foreground}"/>
								<Rectangle Margin="5,0,0,0" Fill="{TemplateBinding Foreground}"></Rectangle>
								<Border  Grid.Column="1"  BorderBrush="{TemplateBinding BorderBrush}" Margin="-5,0,-2,0" BorderThickness="0,1,0,1"/>
							</Grid>
							<Grid  x:Name="Animation">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
								</Grid.ColumnDefinitions>
								<Ellipse Height="{Binding Path=Width,RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="2" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}" Width="8" Fill="{TemplateBinding Foreground}"/>
								<Rectangle   Grid.Column="1"  RenderTransformOrigin="0.5,0.5">
									<Rectangle.RenderTransform>
										<ScaleTransform/>
									</Rectangle.RenderTransform>
									<Rectangle.Fill>
										<VisualBrush Stretch="None">
											<VisualBrush.Visual>
												<Grid Background="{TemplateBinding Foreground}">
													<TextBlock  Grid.ColumnSpan="2"  Text="{Binding Path=Value,RelativeSource={RelativeSource TemplatedParent}}" RenderTransformOrigin=".5,.5" Foreground="White">
														<TextBlock.RenderTransform>
															<RotateTransform Angle="90"></RotateTransform>
														</TextBlock.RenderTransform>
													</TextBlock>
												</Grid>
											</VisualBrush.Visual>
										</VisualBrush>
									</Rectangle.Fill>
								</Rectangle>
								<Ellipse Height="{Binding Path=Width,RelativeSource={RelativeSource TemplatedParent}}"  StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}" Width="10" Fill="{TemplateBinding Foreground}"/>
								<Rectangle   Margin="5,0,0,0" Fill="{TemplateBinding Foreground}"></Rectangle>
								<Border  Grid.Column="1"  BorderBrush="{TemplateBinding BorderBrush}" Margin="-5,0,-2,0" BorderThickness="0,1,0,1"/>
							</Grid>
						</Grid>
						<Ellipse HorizontalAlignment="Right" Height="{Binding Path=Width,RelativeSource={RelativeSource TemplatedParent}}"  StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}" Width="8" Fill="{TemplateBinding Background}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter Property="LayoutTransform" TargetName="TemplateRoot">
								<Setter.Value>
									<RotateTransform Angle="-90"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsIndeterminate" Value="True">
							<Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>