<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Omnia.Pie.Supervisor.UI.Themes.Controls">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Resources/Main.xaml"/>
		<ResourceDictionary Source="TextBlock.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="PasswordBox.Input.Number.Popup.Style" TargetType="{x:Type Popup}">
		<Setter Property="Placement" Value="Absolute"/>
		<Setter Property="Width" Value="390"/>
		<Setter Property="Height" Value="530"/>
		<Setter Property="HorizontalOffset" Value="3261"/>
		<Setter Property="VerticalOffset" Value="191"/>
		<Setter Property="VerticalOffset" Value="119"/>
		<Setter Property="AllowsTransparency" Value="True"/>
		<Setter Property="PopupAnimation" Value="Fade"/>
		<Setter Property="FlowDirection" Value="LeftToRight"/>
		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=FlowDirection}" Value="RightToLeft">
				<Setter Property="HorizontalOffset" Value="24"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="PasswordBox.Input.Text.Popup.Style" TargetType="{x:Type Popup}">
		<Setter Property="Placement" Value="Absolute"/>
		<Setter Property="Width" Value="976"/>
		<Setter Property="Height" Value="532"/>
		<Setter Property="HorizontalOffset" Value="24"/>
		<Setter Property="VerticalOffset" Value="3063"/>
		<Setter Property="AllowsTransparency" Value="True"/>
		<Setter Property="PopupAnimation" Value="Fade"/>
		<Setter Property="FlowDirection" Value="LeftToRight"/>
	</Style>

	<Style x:Key="PasswordBox.Input.Popup.Title.Style" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlock.Normal24.Style}">
		<Setter Property="TextAlignment" Value="Center"/>
	</Style>

	<Style TargetType="{x:Type PasswordBox}" x:Key="passwordBox">
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="Padding" Value="3,7,3,7"/>
		<Setter Property="BorderBrush" Value="{DynamicResource enter}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{DynamicResource foreground}"/>
		<Setter Property="CaretBrush" Value="{DynamicResource foreground}"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="c:TextBoxHelper.ClearWhenBackspace" Value="True"/>
		<Setter Property="c:TextBoxHelper.ClearFocusWhenEnter" Value="True"/>
		<Setter Property="c:TextBoxHelper.HandleEnter" Value="True"/>
		<Setter Property="c:TextBoxHelper.DataType" Value="Numeric"/>
		<Setter Property="Validation.ErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<AdornedElementPlaceholder/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="65"/>
							<RowDefinition Height="auto"/>
						</Grid.RowDefinitions>

						<Border x:Name="PART_Border" Height="45" CornerRadius="{DynamicResource corner}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
						</Border>

						<TextBlock x:Name="PART_Error" Grid.Row="1" 
								   Visibility="Hidden" 
								   Style="{StaticResource TextBlock.Error.Base.Style}"
								   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Validation.Errors)[0].ErrorContent}"/>
						
						<Popup x:Name="PART_Popup" Style="{DynamicResource PasswordBox.Input.Text.Popup.Style}"
							   IsOpen="False" StaysOpen="True"
							   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Grid>
								<Border CornerRadius="12" Background="{DynamicResource backgroundBrush}" Opacity="0.95"/>
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="auto"/>
										<RowDefinition Height="auto"/>
										<RowDefinition Height="*"/>
									</Grid.RowDefinitions>

									<TextBlock Margin="12" Style="{StaticResource PasswordBox.Input.Popup.Title.Style}"
											   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(c:Keyboard.Title)}"
											   Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource NullOrEmptyToVisibility}, ConverterParameter=False}"/>

									<TextBlock x:Name="PART_Title" Grid.Row="1" Margin="35 35 35 0" TextAlignment="Right" Style="{StaticResource TextBlock.Highlighted38.Style}"
											   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text}"/>

									<c:Keyboard x:Name="PART_Keyboard" Grid.Row="2" Margin="0 0 0 33" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
								</Grid>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<!--<Trigger Property="IsReadOnly" Value="False">
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource enter.edit}"/>
							<Setter Property="Foreground" Value="{DynamicResource enter.edit}"/>
						</Trigger>-->
						<Trigger Property="Validation.HasError" Value="True">
							<Setter TargetName="PART_Border" Property="BorderThickness" Value="3"/>
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource error}"/>
							<Setter TargetName="PART_Error" Property="Visibility" Value="Visible"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsKeyboardFocused" Value="True"/>
								<!--<Condition Property="IsReadOnly" Value="False"/>-->
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource hover}"/>
								<Setter TargetName="PART_Popup" Property="IsOpen" Value="True"/>
							</MultiTrigger.Setters>
						</MultiTrigger>
						<Trigger Property="c:TextBoxHelper.DataType" Value="Numeric">
							<Setter TargetName="PART_Popup" Property="Style" Value="{StaticResource PasswordBox.Input.Number.Popup.Style}"/>
							<Setter TargetName="PART_Title" Property="Margin" Value="60 22 60 0"/>
							<Setter TargetName="PART_Keyboard" Property="KeyboardView" Value="Keypad"/>
							<Setter TargetName="PART_Keyboard" Property="Margin" Value="0 0 0 58"/>
						</Trigger>

						<Trigger Property="c:TextBoxHelper.DataType" Value="Alphanumeric">
							<Setter TargetName="PART_Keyboard" Property="KeyboardView" Value="Alphanumeric"/>
							<Setter TargetName="PART_Title" Property="Margin" Value="35 12 35 0"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource passwordBox}"/>
	<Style x:Key="PasswordBox.Input.Device.Status" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource PasswordBox.Input.Popup.Title.Style}">
		<Setter Property="FontSize" Value="20"/>
		<Setter Property="Margin" Value="30"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

</ResourceDictionary>